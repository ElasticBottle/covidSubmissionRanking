[{"C:\\Users\\Winston\\Documents\\Code\\intern_and_work\\Astar\\sequence_submissions\\src\\index.js":"1","C:\\Users\\Winston\\Documents\\Code\\intern_and_work\\Astar\\sequence_submissions\\src\\App.js":"2","C:\\Users\\Winston\\Documents\\Code\\intern_and_work\\Astar\\sequence_submissions\\src\\reportWebVitals.js":"3","C:\\Users\\Winston\\Documents\\Code\\intern_and_work\\Astar\\sequence_submissions\\src\\services\\config.js":"4","C:\\Users\\Winston\\Documents\\Code\\intern_and_work\\Astar\\sequence_submissions\\src\\components\\sequenceTable\\sequenceTable.js":"5","C:\\Users\\Winston\\Documents\\Code\\intern_and_work\\Astar\\sequence_submissions\\src\\services\\endpoint.js":"6","C:\\Users\\Winston\\Documents\\Code\\intern_and_work\\Astar\\sequence_submissions\\src\\services\\sequenceTableData.js":"7","C:\\Users\\Winston\\Documents\\Code\\intern_and_work\\Astar\\sequence_submissions\\src\\util\\useInterval.js":"8","C:\\Users\\Winston\\Documents\\Code\\intern_and_work\\Astar\\sequence_submissions\\src\\components\\table\\table.js":"9","C:\\Users\\Winston\\Documents\\Code\\intern_and_work\\Astar\\sequence_submissions\\src\\util\\addThousandSeparators.js":"10","C:\\Users\\Winston\\Documents\\Code\\intern_and_work\\Astar\\sequence_submissions\\src\\util\\updateBarMinMaxColor.js":"11","C:\\Users\\Winston\\Documents\\Code\\intern_and_work\\Astar\\sequence_submissions\\src\\components\\selection.js":"12","C:\\Users\\Winston\\Documents\\Code\\intern_and_work\\Astar\\sequence_submissions\\src\\util\\orderData.js":"13","C:\\Users\\Winston\\Documents\\Code\\intern_and_work\\Astar\\sequence_submissions\\src\\util\\rankData.js":"14"},{"size":547,"mtime":1610578935477,"results":"15","hashOfConfig":"16"},{"size":687,"mtime":1613256136662,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":499162500000,"results":"18","hashOfConfig":"16"},{"size":1190,"mtime":1613282503022,"results":"19","hashOfConfig":"16"},{"size":3364,"mtime":1613281400341,"results":"20","hashOfConfig":"16"},{"size":79,"mtime":1613255497182,"results":"21","hashOfConfig":"16"},{"size":624,"mtime":1613281667386,"results":"22","hashOfConfig":"16"},{"size":581,"mtime":1610578079800,"results":"23","hashOfConfig":"16"},{"size":8873,"mtime":1613281142126,"results":"24","hashOfConfig":"16"},{"size":691,"mtime":1610581039186,"results":"25","hashOfConfig":"16"},{"size":391,"mtime":1613256349225,"results":"26","hashOfConfig":"16"},{"size":726,"mtime":1610749401322,"results":"27","hashOfConfig":"16"},{"size":206,"mtime":1610754362784,"results":"28","hashOfConfig":"16"},{"size":122,"mtime":1610752353998,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"2kawzw",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"C:\\Users\\Winston\\Documents\\Code\\intern_and_work\\Astar\\sequence_submissions\\src\\index.js",[],["61","62"],"C:\\Users\\Winston\\Documents\\Code\\intern_and_work\\Astar\\sequence_submissions\\src\\App.js",[],"C:\\Users\\Winston\\Documents\\Code\\intern_and_work\\Astar\\sequence_submissions\\src\\reportWebVitals.js",[],"C:\\Users\\Winston\\Documents\\Code\\intern_and_work\\Astar\\sequence_submissions\\src\\services\\config.js",["63","64"],"C:\\Users\\Winston\\Documents\\Code\\intern_and_work\\Astar\\sequence_submissions\\src\\components\\sequenceTable\\sequenceTable.js",[],"C:\\Users\\Winston\\Documents\\Code\\intern_and_work\\Astar\\sequence_submissions\\src\\services\\endpoint.js",[],"C:\\Users\\Winston\\Documents\\Code\\intern_and_work\\Astar\\sequence_submissions\\src\\services\\sequenceTableData.js",["65","66"],"import { endpoint } from \"./endpoint\";\r\nconst Axio = require(\"axios\");\r\n\r\nexport async function getSequenceData() {\r\n  return new Promise((res, rej) => {\r\n    setTimeout(() => {\r\n      const sequenceData = require(\"../assets/data/seqData.json\");\r\n      res(sequenceData);\r\n    }, 2000);\r\n  });\r\n  // process.env.NODE_ENV === \"production\"\r\n  //   ? Axio.get(endpoint.concat(\"country_submission_ranking.json\"))\r\n  //       .then((result) => {\r\n  //         return result.data.stats;\r\n  //       })\r\n  //       .catch((err) => {\r\n  //         console.log(\"err :>> \", err);\r\n  //         return {};\r\n  //       })\r\n  //   :\r\n}\r\n","C:\\Users\\Winston\\Documents\\Code\\intern_and_work\\Astar\\sequence_submissions\\src\\util\\useInterval.js",[],"C:\\Users\\Winston\\Documents\\Code\\intern_and_work\\Astar\\sequence_submissions\\src\\components\\table\\table.js",["67"],"import React from \"react\";\r\nimport BTable from \"react-bootstrap/Table\";\r\nimport Spinner from \"react-bootstrap/Spinner\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nimport { CSVLink } from \"react-csv\";\r\nimport {\r\n  usePagination,\r\n  useTable,\r\n  useGlobalFilter,\r\n  useAsyncDebounce,\r\n} from \"react-table\";\r\n/** @jsxImportSource @emotion/react */\r\nimport { css, jsx } from \"@emotion/react\";\r\nimport { scaleLinear } from \"d3-scale\";\r\n\r\nimport TableStyle from \"./table.module.css\";\r\n\r\nfunction GlobalFilter({\r\n  preGlobalFilteredRows,\r\n  globalFilter,\r\n  setGlobalFilter,\r\n  className,\r\n}) {\r\n  const count = preGlobalFilteredRows.length;\r\n  const [value, setValue] = React.useState(globalFilter);\r\n  const onChange = useAsyncDebounce((value) => {\r\n    setGlobalFilter(value || undefined);\r\n  }, 200);\r\n\r\n  return (\r\n    <span\r\n      className={className}\r\n      style={{\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        fontWeight: \"bold\",\r\n      }}\r\n    >\r\n      Search:{\" \"}\r\n      <input\r\n        value={value || \"\"}\r\n        onChange={(e) => {\r\n          setValue(e.target.value);\r\n          onChange(e.target.value);\r\n        }}\r\n        placeholder={`${count} Countries...`}\r\n        css={css`\r\n          font-size: 1.1rem;\r\n          border: 0;\r\n          margin-left: 20px;\r\n          width: 100%;\r\n          transition: all 0.5s ease 0s;\r\n          &:focus {\r\n            outline: none;\r\n            border-bottom: 1px solid;\r\n          }\r\n        `}\r\n      />\r\n    </span>\r\n  );\r\n}\r\n\r\nfunction Table({\r\n  isLoading,\r\n  columns,\r\n  data,\r\n  barCol,\r\n  barConfig,\r\n  downloadFileName,\r\n  disclaimer = \"\",\r\n}) {\r\n  const csvHeader = columns.map((val) => {\r\n    const header = {};\r\n    header.label = val.Header;\r\n    header.key = val.accessor;\r\n    return header;\r\n  });\r\n\r\n  // Use the state and functions returned from useTable to build your UI\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    prepareRow,\r\n    page,\r\n\r\n    //pagination stuff\r\n    canPreviousPage,\r\n    canNextPage,\r\n    pageOptions,\r\n    pageCount,\r\n    gotoPage,\r\n    nextPage,\r\n    previousPage,\r\n    // setPageSize,\r\n    state: { pageIndex },\r\n    // state: { pageIndex },\r\n\r\n    //global filter\r\n    state,\r\n    preGlobalFilteredRows,\r\n    setGlobalFilter,\r\n  } = useTable(\r\n    {\r\n      columns,\r\n      data,\r\n      autoResetPage: false,\r\n      initialState: { pageIndex: 0, pageSize: 10 },\r\n    },\r\n    useGlobalFilter,\r\n    usePagination\r\n  );\r\n\r\n  // Render the UI for your table\r\n  return (\r\n    <div>\r\n      <GlobalFilter\r\n        preGlobalFilteredRows={preGlobalFilteredRows}\r\n        globalFilter={state.globalFilter}\r\n        setGlobalFilter={setGlobalFilter}\r\n      />\r\n      <div className={TableStyle.tableWrap}>\r\n        {isLoading ? (\r\n          <div className={TableStyle.spinnerContainer}>\r\n            <Spinner animation=\"border\" />\r\n          </div>\r\n        ) : (\r\n          <BTable\r\n            className={`${TableStyle.table} mt-3`}\r\n            hover\r\n            size=\"sm\"\r\n            {...getTableProps()}\r\n          >\r\n            <thead>\r\n              {headerGroups.map((headerGroup) => (\r\n                <tr {...headerGroup.getHeaderGroupProps()}>\r\n                  {headerGroup.headers.map((column) => (\r\n                    <th {...column.getHeaderProps()}>\r\n                      {column.render(\"Header\")}\r\n                    </th>\r\n                  ))}\r\n                </tr>\r\n              ))}\r\n            </thead>\r\n            <tbody {...getTableBodyProps()}>\r\n              {page.map((row, i) => {\r\n                prepareRow(row);\r\n                return (\r\n                  <tr {...row.getRowProps()} key={i}>\r\n                    {row.cells.map((cell) => {\r\n                      const key = columns.find(\r\n                        (val) => val.Header === cell.column.Header\r\n                      ).accessor;\r\n                      return (\r\n                        <td\r\n                          {...cell.getCellProps()}\r\n                          css={\r\n                            barCol.includes(key)\r\n                              ? css`\r\n                                  text-align: left;\r\n                                  &:before {\r\n                                    transition: all 0.5s ease 0s;\r\n                                    content: \"\";\r\n                                    display: inline-block;\r\n                                    height: 14px;\r\n                                    width: calc(\r\n                                      ${cell.column.width}px *\r\n                                        (\r\n                                          ${cell.value} /\r\n                                            ${(barConfig[key] ?? {}).max}\r\n                                        )\r\n                                    );\r\n                                    margin-right: 10px;\r\n                                    background: ${scaleLinear()\r\n                                      .domain([\r\n                                        (barConfig[key] ?? {}).min,\r\n                                        (barConfig[key] ?? {}).max,\r\n                                      ])\r\n                                      .range([\r\n                                        (barConfig[key] ?? {}).minColor,\r\n                                        (barConfig[key] ?? {}).maxColor,\r\n                                      ])(cell.value)};\r\n                                  }\r\n                                  &:hover:before {\r\n                                    opacity: 1;\r\n                                    transform: ${cell.value /\r\n                                      (barConfig[key] ?? {}).max <=\r\n                                    0.3\r\n                                      ? \"scale(1.5)\"\r\n                                      : \"scale(1.1)\"};\r\n                                  }\r\n                                `\r\n                              : css``\r\n                          }\r\n                        >\r\n                          {barCol.includes(key)\r\n                            ? cell.value.toFixed(2)\r\n                            : cell.render(\"Cell\")}\r\n                        </td>\r\n                      );\r\n                    })}\r\n                  </tr>\r\n                );\r\n              })}\r\n            </tbody>\r\n          </BTable>\r\n        )}\r\n        {disclaimer === \"\" ? null : (\r\n          <div className={`${TableStyle.disclaimer} mb-3`}>{disclaimer}</div>\r\n        )}\r\n        {pageOptions.length === 1 ? (\r\n          <Row className={TableStyle.paginationControl}>\r\n            <Col xs={12} md={6} className=\"mb-3\">\r\n              <CSVLink\r\n                data={data}\r\n                headers={csvHeader}\r\n                filename={downloadFileName}\r\n                className=\"btn-sm btn-light\"\r\n                style={{ textDecoration: \"none\" }}\r\n                target=\"_blank\"\r\n              >\r\n                Download Table\r\n              </CSVLink>\r\n            </Col>\r\n          </Row>\r\n        ) : (\r\n          <Row className={TableStyle.paginationControl}>\r\n            <Col sm={12} md={6}>\r\n              <Button\r\n                variant=\"light\"\r\n                size=\"sm\"\r\n                onClick={() => gotoPage(0)}\r\n                disabled={!canPreviousPage}\r\n              >\r\n                {\"<<\"}\r\n              </Button>\r\n              <Button\r\n                variant=\"light\"\r\n                size=\"sm\"\r\n                onClick={() => previousPage()}\r\n                disabled={!canPreviousPage}\r\n              >\r\n                {\"<\"}\r\n              </Button>\r\n              <Button\r\n                variant=\"light\"\r\n                size=\"sm\"\r\n                onClick={() => nextPage()}\r\n                disabled={!canNextPage}\r\n              >\r\n                {\">\"}\r\n              </Button>\r\n              <Button\r\n                variant=\"light\"\r\n                size=\"sm\"\r\n                onClick={() => gotoPage(pageCount - 1)}\r\n                disabled={!canNextPage}\r\n              >\r\n                {\">>\"}\r\n              </Button>\r\n              <p>\r\n                {\" \"}\r\n                Page <strong>{pageIndex + 1} </strong> of{\" \"}\r\n                <strong>{pageOptions.length}</strong>\r\n              </p>\r\n            </Col>\r\n            <Col xs={12} md={6} className=\"mb-3\">\r\n              <CSVLink\r\n                data={data}\r\n                headers={csvHeader}\r\n                filename={downloadFileName}\r\n                className=\"btn-sm btn-light\"\r\n                style={{ textDecoration: \"none\" }}\r\n                target=\"_blank\"\r\n              >\r\n                Download Table\r\n              </CSVLink>\r\n            </Col>\r\n          </Row>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Table;\r\n","C:\\Users\\Winston\\Documents\\Code\\intern_and_work\\Astar\\sequence_submissions\\src\\util\\addThousandSeparators.js",[],"C:\\Users\\Winston\\Documents\\Code\\intern_and_work\\Astar\\sequence_submissions\\src\\util\\updateBarMinMaxColor.js",[],"C:\\Users\\Winston\\Documents\\Code\\intern_and_work\\Astar\\sequence_submissions\\src\\components\\selection.js",[],"C:\\Users\\Winston\\Documents\\Code\\intern_and_work\\Astar\\sequence_submissions\\src\\util\\orderData.js",[],"C:\\Users\\Winston\\Documents\\Code\\intern_and_work\\Astar\\sequence_submissions\\src\\util\\rankData.js",[],{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","severity":1,"message":"73","line":1,"column":10,"nodeType":"74","messageId":"75","endLine":1,"endColumn":18},{"ruleId":"72","severity":1,"message":"76","line":3,"column":7,"nodeType":"74","messageId":"75","endLine":3,"endColumn":12},{"ruleId":"72","severity":1,"message":"73","line":1,"column":10,"nodeType":"74","messageId":"75","endLine":1,"endColumn":18},{"ruleId":"72","severity":1,"message":"77","line":2,"column":7,"nodeType":"74","messageId":"75","endLine":2,"endColumn":11},{"ruleId":"72","severity":1,"message":"78","line":16,"column":15,"nodeType":"74","messageId":"75","endLine":16,"endColumn":18},"no-native-reassign",["79"],"no-negated-in-lhs",["80"],"no-unused-vars","'endpoint' is defined but never used.","Identifier","unusedVar","'Axios' is assigned a value but never used.","'Axio' is assigned a value but never used.","'jsx' is defined but never used.","no-global-assign","no-unsafe-negation"]