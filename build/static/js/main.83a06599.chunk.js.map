{"version":3,"sources":["components/table/table.js","components/selection.js","services/endpoint.js","services/sequenceTableData.js","services/config.js","util/addThousandSeparators.js","components/sequenceTable/sequenceTable.js","util/updateBarMinMaxColor.js","util/rankData.js","util/orderData.js","util/useInterval.js","App.js","reportWebVitals.js","index.js","components/table/table.module.css","components/selection.module.css","App.module.css","components/sequenceTable/sequenceTable.module.css"],"names":["GlobalFilter","preGlobalFilteredRows","globalFilter","setGlobalFilter","className","count","length","React","useState","value","setValue","onChange","useAsyncDebounce","undefined","style","display","alignItems","fontWeight","e","target","placeholder","css","Table","isLoading","columns","data","barCol","barConfig","downloadFileName","disclaimer","console","log","csvHeader","map","val","header","label","Header","key","accessor","useTable","autoResetPage","initialState","pageIndex","pageSize","useGlobalFilter","usePagination","getTableProps","getTableBodyProps","headerGroups","prepareRow","page","canPreviousPage","canNextPage","pageOptions","pageCount","gotoPage","nextPage","previousPage","state","TableStyle","tableWrap","spinnerContainer","Spinner","animation","table","hover","size","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","row","i","getRowProps","cells","cell","find","getCellProps","includes","width","max","scaleLinear","domain","min","range","minColor","maxColor","Row","paginationControl","Col","xs","md","filename","textDecoration","sm","Button","variant","onClick","disabled","Selection","rankOptions","rankBy","setRankBy","SelectStyle","selectContainer","isDisabled","isClearable","isSearchable","name","filter","option","options","endpoint","Axio","require","getSequenceData","a","get","concat","then","result","catch","err","Axios","addThousandSeparator","valueString","toString","x","split","x1","x2","rgx","test","replace","SequenceTable","config","setIsLoading","firstFetch","setFirstFetch","useRef","setRankOptions","setBarCol","rawBarConfig","setRawBarConfig","title","setTitle","setDisclaimer","setBarConfig","setData","fieldToAddCommas","updateData","useCallback","barsConfig","barColumns","barValues","bar","extent","minVal","maxVal","updateBarMinMaxColor","fields","item","forEach","field","addThousandSeparators","index","rank","rankData","order","sort","b","orderData","current","useEffect","sequenceTableRanking","getRankOptions","sequenceTableTitle","getSequenceTableTitle","sequenceTableBarCol","getSequenceTableBarCol","getBarConfig","setting","sequenceTableHeaders","getSequenceTableHeader","sequenceTableDisclaimer","getSequenceTableDisclaimer","prev","callback","delay","savedCallback","id","setInterval","clearInterval","useInterval","SequenceTableStyle","fullWidth","App","setConfig","getConfig","AppStyle","app","seqTable","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.83a06599.chunk.js","sourcesContent":["import React from \"react\";\r\nimport BTable from \"react-bootstrap/Table\";\r\nimport Spinner from \"react-bootstrap/Spinner\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nimport { CSVLink } from \"react-csv\";\r\nimport {\r\n  usePagination,\r\n  useTable,\r\n  useGlobalFilter,\r\n  useAsyncDebounce,\r\n} from \"react-table\";\r\n/** @jsxImportSource @emotion/react */\r\nimport { css, jsx } from \"@emotion/react\";\r\nimport { scaleLinear } from \"d3-scale\";\r\n\r\nimport TableStyle from \"./table.module.css\";\r\n\r\nfunction GlobalFilter({\r\n  preGlobalFilteredRows,\r\n  globalFilter,\r\n  setGlobalFilter,\r\n  className,\r\n}) {\r\n  const count = preGlobalFilteredRows.length;\r\n  const [value, setValue] = React.useState(globalFilter);\r\n  const onChange = useAsyncDebounce((value) => {\r\n    setGlobalFilter(value || undefined);\r\n  }, 200);\r\n\r\n  return (\r\n    <span\r\n      className={className}\r\n      style={{\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        fontWeight: \"bold\",\r\n      }}\r\n    >\r\n      Search:{\" \"}\r\n      <input\r\n        value={value || \"\"}\r\n        onChange={(e) => {\r\n          setValue(e.target.value);\r\n          onChange(e.target.value);\r\n        }}\r\n        placeholder={`${count} Countries...`}\r\n        css={css`\r\n          font-size: 1.1rem;\r\n          border: 0;\r\n          margin-left: 20px;\r\n          width: 100%;\r\n          transition: all 0.5s ease 0s;\r\n          &:focus {\r\n            outline: none;\r\n            border-bottom: 1px solid;\r\n          }\r\n        `}\r\n      />\r\n    </span>\r\n  );\r\n}\r\n\r\nfunction Table({\r\n  isLoading,\r\n  columns,\r\n  data,\r\n  barCol,\r\n  barConfig,\r\n  downloadFileName,\r\n  disclaimer = \"\",\r\n}) {\r\n  console.log(\"barConfig :>> \", barConfig);\r\n  console.log(\"data :>> \", data);\r\n  const csvHeader = columns.map((val) => {\r\n    const header = {};\r\n    header.label = val.Header;\r\n    header.key = val.accessor;\r\n    return header;\r\n  });\r\n\r\n  // Use the state and functions returned from useTable to build your UI\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    prepareRow,\r\n    page,\r\n\r\n    //pagination stuff\r\n    canPreviousPage,\r\n    canNextPage,\r\n    pageOptions,\r\n    pageCount,\r\n    gotoPage,\r\n    nextPage,\r\n    previousPage,\r\n    // setPageSize,\r\n    state: { pageIndex },\r\n    // state: { pageIndex },\r\n\r\n    //global filter\r\n    state,\r\n    preGlobalFilteredRows,\r\n    setGlobalFilter,\r\n  } = useTable(\r\n    {\r\n      columns,\r\n      data,\r\n      autoResetPage: false,\r\n      initialState: { pageIndex: 0, pageSize: 10 },\r\n    },\r\n    useGlobalFilter,\r\n    usePagination\r\n  );\r\n\r\n  // Render the UI for your table\r\n  return (\r\n    <div>\r\n      <GlobalFilter\r\n        preGlobalFilteredRows={preGlobalFilteredRows}\r\n        globalFilter={state.globalFilter}\r\n        setGlobalFilter={setGlobalFilter}\r\n      />\r\n      <div className={TableStyle.tableWrap}>\r\n        {isLoading ? (\r\n          <div className={TableStyle.spinnerContainer}>\r\n            <Spinner animation=\"border\" />\r\n          </div>\r\n        ) : (\r\n          <BTable\r\n            className={`${TableStyle.table} mt-3`}\r\n            hover\r\n            size=\"sm\"\r\n            {...getTableProps()}\r\n          >\r\n            <thead>\r\n              {headerGroups.map((headerGroup) => (\r\n                <tr {...headerGroup.getHeaderGroupProps()}>\r\n                  {headerGroup.headers.map((column) => (\r\n                    <th {...column.getHeaderProps()}>\r\n                      {column.render(\"Header\")}\r\n                    </th>\r\n                  ))}\r\n                </tr>\r\n              ))}\r\n            </thead>\r\n            <tbody {...getTableBodyProps()}>\r\n              {page.map((row, i) => {\r\n                prepareRow(row);\r\n                return (\r\n                  <tr {...row.getRowProps()} key={i}>\r\n                    {row.cells.map((cell) => {\r\n                      const key = columns.find(\r\n                        (val) => val.Header === cell.column.Header\r\n                      ).accessor;\r\n                      return (\r\n                        <td\r\n                          {...cell.getCellProps()}\r\n                          css={\r\n                            barCol.includes(key)\r\n                              ? css`\r\n                                  text-align: left;\r\n                                  &:before {\r\n                                    transition: all 0.5s ease 0s;\r\n                                    content: \"\";\r\n                                    display: inline-block;\r\n                                    height: 14px;\r\n                                    width: calc(\r\n                                      ${cell.column.width}px *\r\n                                        (\r\n                                          ${cell.value} /\r\n                                            ${(barConfig[key] ?? {}).max}\r\n                                        )\r\n                                    );\r\n                                    margin-right: 10px;\r\n                                    background: ${scaleLinear()\r\n                                      .domain([\r\n                                        (barConfig[key] ?? {}).min,\r\n                                        (barConfig[key] ?? {}).max,\r\n                                      ])\r\n                                      .range([\r\n                                        (barConfig[key] ?? {}).minColor,\r\n                                        (barConfig[key] ?? {}).maxColor,\r\n                                      ])(cell.value)};\r\n                                  }\r\n                                  &:hover:before {\r\n                                    opacity: 1;\r\n                                    transform: ${cell.value /\r\n                                      (barConfig[key] ?? {}).max <=\r\n                                    0.3\r\n                                      ? \"scale(1.5)\"\r\n                                      : \"scale(1.1)\"};\r\n                                  }\r\n                                `\r\n                              : css``\r\n                          }\r\n                        >\r\n                          {cell.render(\"Cell\")}\r\n                        </td>\r\n                      );\r\n                    })}\r\n                  </tr>\r\n                );\r\n              })}\r\n            </tbody>\r\n          </BTable>\r\n        )}\r\n        {disclaimer === \"\" ? null : (\r\n          <div className={`${TableStyle.disclaimer} mb-3`}>{disclaimer}</div>\r\n        )}\r\n        {pageOptions.length === 1 ? (\r\n          <Row className={TableStyle.paginationControl}>\r\n            <Col xs={12} md={6} className=\"mb-3\">\r\n              <CSVLink\r\n                data={data}\r\n                headers={csvHeader}\r\n                filename={downloadFileName}\r\n                className=\"btn-sm btn-light\"\r\n                style={{ textDecoration: \"none\" }}\r\n                target=\"_blank\"\r\n              >\r\n                Download Table\r\n              </CSVLink>\r\n            </Col>\r\n          </Row>\r\n        ) : (\r\n          <Row className={TableStyle.paginationControl}>\r\n            <Col sm={12} md={6}>\r\n              <Button\r\n                variant=\"light\"\r\n                size=\"sm\"\r\n                onClick={() => gotoPage(0)}\r\n                disabled={!canPreviousPage}\r\n              >\r\n                {\"<<\"}\r\n              </Button>\r\n              <Button\r\n                variant=\"light\"\r\n                size=\"sm\"\r\n                onClick={() => previousPage()}\r\n                disabled={!canPreviousPage}\r\n              >\r\n                {\"<\"}\r\n              </Button>\r\n              <Button\r\n                variant=\"light\"\r\n                size=\"sm\"\r\n                onClick={() => nextPage()}\r\n                disabled={!canNextPage}\r\n              >\r\n                {\">\"}\r\n              </Button>\r\n              <Button\r\n                variant=\"light\"\r\n                size=\"sm\"\r\n                onClick={() => gotoPage(pageCount - 1)}\r\n                disabled={!canNextPage}\r\n              >\r\n                {\">>\"}\r\n              </Button>\r\n              <p>\r\n                {\" \"}\r\n                Page <strong>{pageIndex + 1} </strong> of{\" \"}\r\n                <strong>{pageOptions.length}</strong>\r\n              </p>\r\n            </Col>\r\n            <Col xs={12} md={6} className=\"mb-3\">\r\n              <CSVLink\r\n                data={data}\r\n                headers={csvHeader}\r\n                filename={downloadFileName}\r\n                className=\"btn-sm btn-light\"\r\n                style={{ textDecoration: \"none\" }}\r\n                target=\"_blank\"\r\n              >\r\n                Download Table\r\n              </CSVLink>\r\n            </Col>\r\n          </Row>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Table;\r\n","import React from \"react\";\r\nimport Select from \"react-select\";\r\n\r\nimport SelectStyle from \"./selection.module.css\";\r\n\r\nfunction Selection({ rankOptions, rankBy, setRankBy, label }) {\r\n  return (\r\n    <div className={`mt-4 mb-4 ${SelectStyle.selectContainer}`}>\r\n      <div className={SelectStyle.label}>{label}</div>\r\n      <Select\r\n        className={SelectStyle.rankBy}\r\n        isDisabled={false}\r\n        isLoading={false}\r\n        isClearable={false}\r\n        isSearchable={true}\r\n        name={label}\r\n        value={(rankOptions ?? []).filter((option) => option.value === rankBy)}\r\n        options={rankOptions}\r\n        onChange={(e) => setRankBy(e.value)}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Selection;\r\n","export const endpoint =\r\n  \"https://mendel3.bii.a-star.edu.sg/METHODS/corona/gamma/GISAID/submissionRanking/data/\";\r\n","import { endpoint } from \"./endpoint\";\r\nconst Axio = require(\"axios\");\r\n\r\nexport async function getSequenceData() {\r\n  return process.env.NODE_ENV === \"production\"\r\n    ? Axio.get(endpoint.concat(\"sequenceData.json\"))\r\n        .then((result) => {\r\n          return result.data;\r\n        })\r\n        .catch((err) => {\r\n          console.log(\"err :>> \", err);\r\n          return {};\r\n        })\r\n    : new Promise((res, rej) => {\r\n        setTimeout(() => {\r\n          const sequenceData = require(\"../assets/data/sequenceData.json\");\r\n          res(sequenceData);\r\n        }, 2000);\r\n      });\r\n}\r\n","import { endpoint } from \"./endpoint\";\r\nimport config from \"../assets/data/config.json\";\r\nconst Axios = require(\"axios\");\r\n\r\nexport async function getConfig() {\r\n  return process.env.NODE_ENV === \"production\"\r\n    ? Axios.get(endpoint.concat(\"config.json\"))\r\n        .then((result) => {\r\n          return result.data;\r\n        })\r\n        .catch((err) => {\r\n          console.log(\"err :>> \", err);\r\n          return {};\r\n        })\r\n    : new Promise((res, rej) => {\r\n        res(config);\r\n      });\r\n}\r\n\r\nexport function getSequenceTableHeader(config, setting = \"default\") {\r\n  return (config.sequenceTableHeaders ?? {})[setting] ?? [];\r\n}\r\n\r\nexport function getSequenceTableTitle(config) {\r\n  return config.sequenceTableTitle ?? \"\";\r\n}\r\nexport function getSequenceTableDisclaimer(config) {\r\n  return config.sequenceTableDisclaimer ?? \"\";\r\n}\r\n\r\nexport function getSequenceTableBarCol(config) {\r\n  return config.sequenceTableBarCol;\r\n}\r\n\r\nexport function getBarConfig(config) {\r\n  return config.barConfig;\r\n}\r\n\r\nexport function getRankOptions(config) {\r\n  return config.sequenceTableRanking;\r\n}\r\n","export function addThousandSeparators(result, fields) {\r\n  for (const item of result) {\r\n    typeof fields === \"string\"\r\n      ? (item[fields] = addThousandSeparator(item[fields]))\r\n      : fields.forEach((field) => {\r\n          item[field] = addThousandSeparator(item[field]);\r\n        });\r\n  }\r\n  return result;\r\n}\r\n// Credit to http://www.mredkj.com/javascript/nfbasic.html\r\nfunction addThousandSeparator(value = \"\") {\r\n  const valueString = value.toString();\r\n  const x = valueString.split(\".\");\r\n  let x1 = x[0];\r\n  const x2 = x.length > 1 ? \".\" + x[1] : \"\";\r\n  const rgx = /(\\d+)(\\d{3})/;\r\n  while (rgx.test(x1)) {\r\n    x1 = x1.replace(rgx, \"$1,$2\");\r\n  }\r\n  return x1.concat(x2);\r\n}\r\n","import React from \"react\";\r\n\r\nimport Table from \"../table/table\";\r\nimport Selection from \"../selection\";\r\nimport { getSequenceData } from \"../../services/sequenceTableData\";\r\nimport {\r\n  getSequenceTableTitle,\r\n  getSequenceTableHeader,\r\n  getSequenceTableDisclaimer,\r\n  getSequenceTableBarCol,\r\n  getBarConfig,\r\n  getRankOptions,\r\n} from \"../../services/config\";\r\nimport { useInterval } from \"../../util/useInterval\";\r\nimport { addThousandSeparators } from \"../../util/addThousandSeparators\";\r\nimport { updateBarMinMaxColor } from \"../../util/updateBarMinMaxColor\";\r\nimport { orderData } from \"../../util/orderData\";\r\nimport { rankData } from \"../../util/rankData\";\r\n\r\nimport SequenceTableStyle from \"./sequenceTable.module.css\";\r\n\r\nconst SequenceTable = ({ config }) => {\r\n  const [isLoading, setIsLoading] = React.useState(true);\r\n  const [firstFetch, setFirstFetch] = React.useState(true);\r\n\r\n  const columns = React.useRef([]);\r\n  const [rankOptions, setRankOptions] = React.useState([]);\r\n  const [barCol, setBarCol] = React.useState([]);\r\n  const [rawBarConfig, setRawBarConfig] = React.useState({});\r\n  const [title, setTitle] = React.useState(\"\");\r\n  const [disclaimer, setDisclaimer] = React.useState(\"\");\r\n\r\n  const [rankBy, setRankBy] = React.useState(\"seq_per_1000\");\r\n  const [barConfig, setBarConfig] = React.useState({});\r\n  const [data, setData] = React.useState([]);\r\n  const fieldToAddCommas = React.useRef([\r\n    \"reported_cases\",\r\n    \"samples_sequenced\",\r\n  ]);\r\n  const updateData = React.useCallback(\r\n    (data) => {\r\n      setBarConfig(\r\n        updateBarMinMaxColor({\r\n          barsConfig: rawBarConfig,\r\n          barColumns: barCol,\r\n          data: data,\r\n        })\r\n      );\r\n      setIsLoading(false);\r\n\r\n      return addThousandSeparators(\r\n        rankData(\r\n          orderData(rankBy, data, ((rawBarConfig ?? {})[rankBy] ?? {}).order)\r\n        ),\r\n        fieldToAddCommas.current\r\n      );\r\n    },\r\n    [rawBarConfig, rankBy, barCol]\r\n  );\r\n\r\n  React.useEffect(() => {\r\n    setRankOptions(getRankOptions(config));\r\n    setTitle(getSequenceTableTitle(config));\r\n    setBarCol(getSequenceTableBarCol(config));\r\n    setRawBarConfig(getBarConfig(config));\r\n    columns.current = getSequenceTableHeader(config);\r\n    setDisclaimer(getSequenceTableDisclaimer(config));\r\n  }, [config]);\r\n\r\n  React.useEffect(() => {\r\n    setIsLoading(true);\r\n    firstFetch\r\n      ? getSequenceData().then((result) => {\r\n          setFirstFetch(false);\r\n          setData(updateData(result));\r\n        })\r\n      : setData((prev) => updateData(prev));\r\n  }, [firstFetch, updateData]);\r\n\r\n  const fiveMinutes = 1000 * 60 * 5; // in milliseconds\r\n  useInterval(() => {\r\n    getSequenceData().then((result) => setData(updateData(result)));\r\n  }, fiveMinutes);\r\n\r\n  return (\r\n    <div className={`${SequenceTableStyle.fullWidth}`}>\r\n      <h2 className={SequenceTableStyle.title}>{title ?? \"\"}</h2>\r\n      <Selection\r\n        rankBy={rankBy}\r\n        setRankBy={setRankBy}\r\n        rankOptions={rankOptions}\r\n        label=\"Rank By\"\r\n      />\r\n      <Table\r\n        columns={columns.current}\r\n        data={data}\r\n        barCol={barCol}\r\n        barConfig={barConfig}\r\n        downloadFileName=\"sequenceOFSubmission.csv\"\r\n        isLoading={isLoading}\r\n        disclaimer={disclaimer}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SequenceTable;\r\n","import { extent } from \"d3-array\";\r\n\r\nexport function updateBarMinMaxColor({ data, barsConfig, barColumns = [] }) {\r\n  const barValues = {};\r\n  for (const bar of barColumns) {\r\n    barValues[bar] = barsConfig[bar];\r\n    const [minVal, maxVal] = extent(data.map((value) => value[bar]));\r\n    barValues[bar].min = minVal;\r\n    barValues[bar].max = maxVal;\r\n  }\r\n  return barValues;\r\n}\r\n","export function rankData(data) {\r\n  return data.map((val, index) => {\r\n    return { ...val, rank: index + 1 };\r\n  });\r\n}\r\n","import { sort } from \"d3-array\";\r\n\r\nexport function orderData(rankBy, data, order) {\r\n  return sort(data, (a, b) => {\r\n    return order === \"ASC\" ? a[rankBy] - b[rankBy] : b[rankBy] - a[rankBy];\r\n  });\r\n}\r\n","// Credit to: https://overreacted.io/making-setinterval-declarative-with-react-hooks/\r\n\r\nimport { useEffect, useRef } from \"react\";\r\n\r\nexport function useInterval(callback, delay) {\r\n  const savedCallback = useRef();\r\n\r\n  // Remember the latest callback.\r\n  useEffect(() => {\r\n    savedCallback.current = callback;\r\n  }, [callback]);\r\n\r\n  // Set up the interval.\r\n  useEffect(() => {\r\n    function tick() {\r\n      savedCallback.current();\r\n    }\r\n    if (delay !== null) {\r\n      let id = setInterval(tick, delay);\r\n      return () => clearInterval(id);\r\n    }\r\n  }, [delay]);\r\n}\r\n","import React from \"react\";\nimport AppStyle from \"./App.module.css\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport SequenceTable from \"./components/sequenceTable/sequenceTable\";\nimport { getConfig } from \"./services/config\";\n\nfunction App() {\n  const [config, setConfig] = React.useState({});\n\n  React.useEffect(() => {\n    getConfig().then((result) => setConfig(result));\n  }, []);\n  return (\n    <div className={AppStyle.app}>\n      <Row>\n        <Col className=\"mt-3\">\n          <div className={AppStyle.seqTable}>\n            <SequenceTable config={config} />\n          </div>\n        </Col>\n      </Row>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tableWrap\":\"table_tableWrap__2lYj0\",\"table\":\"table_table__orQ_Q\",\"spinnerContainer\":\"table_spinnerContainer__3VxqN\",\"disclaimer\":\"table_disclaimer__2YZDm\",\"paginationControl\":\"table_paginationControl__2aY2e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectContainer\":\"selection_selectContainer__jkeOd\",\"label\":\"selection_label__3iu0y\",\"rankBy\":\"selection_rankBy__3WNfz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__1xh09\",\"seqTable\":\"App_seqTable__a9Xm0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"sequenceTable_title__x4oOe\",\"fullWidth\":\"sequenceTable_fullWidth__2Jg08\"};"],"sourceRoot":""}